{"version":3,"sources":["com/clover/json/RemoteMessageParser.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,0CAA4C;AAE5C,qDAAkD;AAClD,2DAAwD;AAExD;;;;GAIG;AACH;IAAyC,uCAAkB;IASvD;eACI,iBAAO;IACX,CAAC;IANM,sCAAkB,GAAzB;QACI,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC;IACxC,CAAC;IAMD;;;;;OAKG;IACI,8DAAgC,GAAvC,UAAwC,gBAAiD,EACjD,uBAAwC;QAAxC,wCAAA,EAAA,+BAAwC;QAC5E,IAAI,mBAAmB,GAAG,iCAAe,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC;QAChF,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACtB,IAAI,iBAAiB,GAAG,IAAI,mBAAmB,CAAC;YAChD,EAAE,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBAChC,kEAAkE;gBAClE,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC;gBACxD,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,iBAAiB,EAAE,uBAAuB,CAAC,CAAC;gBACxF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,iBAAiB,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACI,kDAAoB,GAA3B,UAA4B,aAAkB;QAC1C,IAAI,gBAAgB,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QAC7D,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAC9D,MAAM,CAAC,gBAAgB,CAAC;IAC5B,CAAC;IA1CD,sBAAsB;IACP,4BAAQ,GAAwB,IAAI,mBAAmB,EAAE,CAAC;IA0C7E,0BAAC;CA7CD,AA6CC,CA7CwC,uCAAkB,GA6C1D;AA7CY,kDAAmB","file":"../../../../com/clover/json/RemoteMessageParser.js","sourcesContent":["import * as sdk from 'remote-pay-cloud-api';\n\nimport {MethodToMessage} from './MethodToMessage';\nimport {JSONToCustomObject} from './JSONToCustomObject';\n\n/**\n * Parses remote messages from raw json, and extracts messages from the\n * remote message payload object.\n *\n */\nexport class RemoteMessageParser extends JSONToCustomObject {\n\n    // packageName:string;\n    private static INSTANCE: RemoteMessageParser = new RemoteMessageParser();\n\n    static getDefaultInstance(): RemoteMessageParser {\n        return RemoteMessageParser.INSTANCE;\n    }\n\n    public constructor() {\n        super();\n    }\n\n    /**\n     *\n     * @param remoteMessageObj - the sdk.remotemessage.RemoteMessage that has a payload that will be parsed to a\n     * sdk.remotemessage.Message\n     * @returns {sdk.remotemessage.Message}\n     */\n    public parseMessageFromRemoteMessageObj(remoteMessageObj: sdk.remotemessage.RemoteMessage,\n                                            attachUnknownProperties: boolean = false): sdk.remotemessage.Message {\n        var responseMessageType = MethodToMessage.getType(remoteMessageObj.getMethod());\n        if (responseMessageType) {\n            var messageToPopulate = new responseMessageType;\n            if (remoteMessageObj.getPayload()) {\n                // Older versions of the remote-pay lib did not return a body here\n                var payload = JSON.parse(remoteMessageObj.getPayload());\n                var copied = this.transfertoObject(payload, messageToPopulate, attachUnknownProperties);\n                if (copied) {\n                    return copied;\n                }\n            }\n        }\n        return messageToPopulate;\n    }\n\n    /**\n     * @param remoteMessage - a json object that is a serialized RemoteMessage\n     * @returns {sdk.remotemessage.RemoteMessage} - object populated from the input json object.\n     */\n    public parseToRemoteMessage(remoteMessage: any) {\n        var remoteMessageObj = new sdk.remotemessage.RemoteMessage();\n        this.transfertoObject(remoteMessage, remoteMessageObj, false);\n        return remoteMessageObj;\n    }\n}\n"]}