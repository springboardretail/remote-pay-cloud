{"version":3,"sources":["com/clover/remote/client/CloverConnectorFactoryV2.ts"],"names":[],"mappings":";;AAIA,qDAAkD;AAElD;;;;;;;GAOG;AACH;IACI;IACA,CAAC;IAED;;;;;OAKG;IACI,yDAAsB,GAA7B,UAA8B,aAAwC;QAClE,MAAM,CAAC,IAAI,iCAAe,CAAC,aAAa,CAAC,CAAC;IAC9C,CAAC;IACL,+BAAC;AAAD,CAbA,AAaC,IAAA;AAbY,4DAAwB","file":"../../../../../com/clover/remote/client/CloverConnectorFactoryV2.js","sourcesContent":["import * as sdk from 'remote-pay-cloud-api';\n\nimport {CloverDeviceConfiguration} from './device/CloverDeviceConfiguration';\nimport {ICloverConnectorFactory} from './ICloverConnectorFactory';\nimport {CloverConnector} from './CloverConnector';\n\n/**\n * Produces ICloverConnector objects that can be configured using CloverDeviceConfiguration objects.\n *\n * The connectors produced are dependant on the configuration and can be used to connect directly to\n * the device from a Web Browser, or via the Cloud.  They can also be used to connect directly to the\n * device or through the cloud using a NodeJS application.\n *\n */\nexport class CloverConnectorFactoryV2 implements ICloverConnectorFactory {\n    constructor() {\n    }\n\n    /**\n     * Produces a ICloverConnector given a configuration.\n     *\n     * @param configuration - a configuration that determines how the connector connects to the device\n     * @returns {CloverConnector}\n     */\n    public createICloverConnector(configuration: CloverDeviceConfiguration): sdk.remotepay.ICloverConnector {\n        return new CloverConnector(configuration);\n    }\n}"]}