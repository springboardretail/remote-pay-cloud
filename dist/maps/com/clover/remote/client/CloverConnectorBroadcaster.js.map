{"version":3,"sources":["com/clover/remote/client/CloverConnectorBroadcaster.ts"],"names":[],"mappings":"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","file":"../../../../../com/clover/remote/client/CloverConnectorBroadcaster.js","sourcesContent":["import * as sdk from 'remote-pay-cloud-api';\nimport {Logger} from './util/Logger';\n\n/**\n * Broadcasts events to a set of ICloverConnectorListener's\n *\n */\nexport class CloverConnectorBroadcaster\n    // *JavaScript Implementation Note*:\n    // The following causes type issues.\n    //\textends Array<sdk.remotepay.ICloverConnectorListener>\n{\n\n    private listeners: Array<sdk.remotepay.ICloverConnectorListener>;\n\n    private logger: Logger = Logger.create();\n\n    constructor() {\n        this.listeners = new Array<sdk.remotepay.ICloverConnectorListener>();\n    }\n\n    public clear(): void {\n        this.listeners.splice(0, this.listeners.length);\n    }\n\n    public push(...items: Array<sdk.remotepay.ICloverConnectorListener>): number {\n        if (items.length == 1) {\n            return this.listeners.push(items[0]);\n        } else {\n            return this.listeners.push(<any>items);\n        }\n    }\n\n    public indexOf(searchElement: sdk.remotepay.ICloverConnectorListener, fromIndex?: number): number {\n        return this.listeners.indexOf(searchElement, fromIndex);\n    }\n\n    public splice(start: number, deleteCount: number, ...items: Array<sdk.remotepay.ICloverConnectorListener>): sdk.remotepay.ICloverConnectorListener[] {\n        return (items && items.length > 0) ? this.listeners.splice(start, deleteCount, <any>items) : this.listeners.splice(start, deleteCount);\n    }\n\n    public notifyOnTipAdded(tip: number): void {\n        this.logger.debug('Sending TipAdded notification to listeners');\n        let tipAdded: sdk.remotepay.TipAdded = new sdk.remotepay.TipAdded();\n        tipAdded.setTipAmount(tip);\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onTipAdded(tipAdded);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnRefundPaymentResponse(refundPaymentResponse: sdk.remotepay.RefundPaymentResponse): void {\n        this.logger.debug('Sending RefundPaymentResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onRefundPaymentResponse(refundPaymentResponse);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyCloseout(closeoutResponse: sdk.remotepay.CloseoutResponse): void {\n        this.logger.debug('Sending Closeout notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onCloseoutResponse(closeoutResponse);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnDeviceActivityStart(deviceEvent: sdk.remotepay.CloverDeviceEvent): void {\n        this.logger.debug('Sending DeviceActivityStart notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onDeviceActivityStart(deviceEvent);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnDeviceActivityEnd(deviceEvent: sdk.remotepay.CloverDeviceEvent): void {\n        this.logger.debug('Sending DeviceActivityEnd notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onDeviceActivityEnd(deviceEvent);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnSaleResponse(response: sdk.remotepay.SaleResponse): void {\n        this.logger.debug('Sending SaleResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onSaleResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnAuthResponse(response: sdk.remotepay.AuthResponse): void {\n        this.logger.debug('Sending AuthResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onAuthResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnManualRefundResponse(response: sdk.remotepay.ManualRefundResponse): void {\n        this.logger.debug('Sending ManualRefundResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onManualRefundResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnVerifySignatureRequest(request: sdk.remotepay.VerifySignatureRequest): void {\n        this.logger.debug('Sending VerifySignatureRequest notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onVerifySignatureRequest(request);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnVoidPaymentResponse(response: sdk.remotepay.VoidPaymentResponse): void {\n        this.logger.debug('Sending VoidPaymentResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onVoidPaymentResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnConnect(): void {\n        this.logger.debug('Sending Connect notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onDeviceConnected();  // changed the name in 1.3\n                listener.onConnected();        // left here for backwards compatibility.  Deprecated in 1.3*\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnDisconnect(message?: string): void {\n        this.logger.debug('Sending Disconnect notification to listeners', message);\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onDeviceDisconnected();  // changed the name in 1.3\n                listener.onDisconnected(); // left here for backwards compatibility.  Deprecated in 1.3*\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnReady(merchantInfo: sdk.remotepay.MerchantInfo): void {\n        this.logger.debug('Sending Ready notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onDeviceReady(merchantInfo);  // changed the name in 1.3\n                listener.onReady(merchantInfo);        // left here for backwards compatibility.  Deprecated in 1.3*\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnTipAdjustAuthResponse(response: sdk.remotepay.TipAdjustAuthResponse): void {\n        this.logger.debug('Sending TipAdjustAuthResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onTipAdjustAuthResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnVaultCardRespose(ccr: sdk.remotepay.VaultCardResponse): void {\n        this.logger.debug('Sending VaultCardResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onVaultCardResponse(ccr);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnPreAuthResponse(response: sdk.remotepay.PreAuthResponse): void {\n        this.logger.debug('Sending PreAuthResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onPreAuthResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnCapturePreAuth(response: sdk.remotepay.CapturePreAuthResponse): void {\n        this.logger.debug('Sending CapturePreAuth notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onCapturePreAuthResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnDeviceError(errorEvent: sdk.remotepay.CloverDeviceErrorEvent): void {\n        this.logger.debug('Sending DeviceError notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onDeviceError(errorEvent);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnConfirmPaymentRequest(confirmPaymentRequest: sdk.remotepay.ConfirmPaymentRequest): void {\n        this.logger.debug('Sending ConfirmPaymentRequest notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onConfirmPaymentRequest(confirmPaymentRequest);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnRetrievePendingPaymentResponse(rppr: sdk.remotepay.RetrievePendingPaymentsResponse): void {\n        this.logger.debug('Sending RetrievePendingPaymentResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onRetrievePendingPaymentsResponse(rppr);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnReadCardDataResponse(rcdr: sdk.remotepay.ReadCardDataResponse): void {\n        this.logger.debug('Sending ReadCardDataResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onReadCardDataResponse(rcdr);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnActivityMessage(response: sdk.remotepay.MessageFromActivity): void {\n        this.logger.debug('Sending MessageFromActivity notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onMessageFromActivity(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnActivityResponse(response: sdk.remotepay.CustomActivityResponse): void {\n        this.logger.debug('Sending ActivityResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onCustomActivityResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnRetrieveDeviceStatusResponse(response: sdk.remotepay.RetrieveDeviceStatusResponse): void {\n        this.logger.debug('Sending RetrieveDeviceStatusResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onRetrieveDeviceStatusResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnResetDeviceResponse(response: sdk.remotepay.ResetDeviceResponse): void {\n        this.logger.debug('Sending ResetDeviceResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onResetDeviceResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnRetrievePaymentResponse(response: sdk.remotepay.RetrievePaymentResponse): void {\n        this.logger.debug('Sending RetrievePaymentResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onRetrievePaymentResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnRetrievePrintersResponse(response: sdk.remotepay.RetrievePrintersResponse): void {\n        this.logger.debug('Sending RetrievePrintersResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onRetrievePrintersResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n\n    public notifyOnPrintJobStatusResponse(response: sdk.remotepay.PrintJobStatusResponse): void {\n        this.logger.debug('Sending PrintJobStatusResponse notification to listeners');\n        this.listeners.forEach((listener: sdk.remotepay.ICloverConnectorListener) => {\n            try {\n                listener.onPrintJobStatusResponse(response);\n            }\n            catch (e) {\n                this.logger.error(e);\n            }\n        });\n    }\n}\n"]}