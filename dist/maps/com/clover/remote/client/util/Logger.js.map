{"version":3,"sources":["com/clover/remote/client/util/Logger.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iCAAoC;AACpC,6CAA0C;AAE1C;;GAEG;AACH;IAA4B,0BAAY;IAGpC;QAAA,YACI,iBAAO,SACV;QAJM,aAAO,GAAY,KAAK,CAAC;;IAIhC,CAAC;IAEa,aAAM,GAApB;QACI,IAAI,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAI,SAAS,GAAW,OAAO,CAAC;QAEhC,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACzB,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAC/C,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;QACnD,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC7C,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC7C,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;QACjD,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAE/C,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;QACpB,MAAM,CAAC,GAAG,CAAC;QAEX;YACI,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAC/B,QAAQ,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,KAAK,CAAC;YACvE,EAAE,CAAC,CAAC,QAAQ,IAAI,GAAG,CAAC,OAAO,IAAI,yBAAW,CAAC,cAAc,CAAC,CAAC,CAAC;gBACxD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,OAAO,CAAC,KAAK,EAAE,CAAC;gBACpB,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAEM,sBAAK,GAAZ;QAAa,aAAa;aAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;YAAb,wBAAa;;IAC1B,CAAC;IAEM,wBAAO,GAAd;QAAe,aAAa;aAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;YAAb,wBAAa;;IAC5B,CAAC;IAEM,qBAAI,GAAX;QAAY,aAAa;aAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;YAAb,wBAAa;;IACzB,CAAC;IAEM,qBAAI,GAAX;QAAY,aAAa;aAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;YAAb,wBAAa;;IACzB,CAAC;IAEM,sBAAK,GAAZ;QAAa,aAAa;aAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;YAAb,wBAAa;;IAC1B,CAAC;IAEM,sBAAK,GAAZ;QAAa,aAAa;aAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;YAAb,wBAAa;;IAC1B,CAAC;IACL,aAAC;AAAD,CAnDA,AAmDC,CAnD2B,qBAAY,GAmDvC;AAnDY,wBAAM","file":"../../../../../../com/clover/remote/client/util/Logger.js","sourcesContent":["import {EventEmitter} from 'events';\nimport {DebugConfig} from './DebugConfig';\n\n/**\n * A simple logging utility that uses the underlying console.\n */\nexport class Logger extends EventEmitter {\n    public enabled: boolean = false;\n\n    constructor() {\n        super();\n    }\n\n    public static create(): Logger {\n        let log = new Logger();\n        let errString: string = \"error\";\n\n        log.on(\"log\", toConsole);\n        log.silly = log.emit.bind(log, \"log\", \"silly\");\n        log.verbose = log.emit.bind(log, \"log\", \"verbose\");\n        log.info = log.emit.bind(log, \"log\", \"info\");\n        log.warn = log.emit.bind(log, \"log\", \"warn\");\n        log.error = log.emit.bind(log, \"log\", errString);\n        log.debug = log.emit.bind(log, \"log\", \"debug\");\n\n        log.enabled = false;\n        return log;\n\n        function toConsole() {\n            let args = [].slice.call(arguments),\n                errorLog = args && args.length > 0 ? args[0] === errString : false;\n            if (errorLog || log.enabled || DebugConfig.loggingEnabled) {\n                console.log.apply(console, arguments);\n                if (errorLog) {\n                    console.trace();\n                }\n            }\n        }\n    }\n\n    public silly(...any: any[]) {\n    }\n\n    public verbose(...any: any[]) {\n    }\n\n    public info(...any: any[]) {\n    }\n\n    public warn(...any: any[]) {\n    }\n\n    public error(...any: any[]) {\n    }\n\n    public debug(...any: any[]) {\n    }\n}\n"]}